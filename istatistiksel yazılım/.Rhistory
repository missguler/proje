) +
scale_fill_high_contrast(foreground_color = foreground_color) +
labs(title = paste0("Demografik degiskenlerin"),
subtitle =paste0("yaslara gore dagilimi"),
caption = "Gliomas Data")
return(plot)
}
p <- plot_bar_high_contrast(data$vital_status)
p
pattern_2_nf1 <- zero_or_more(separator) %R% "atggctagag" %R%zero_or_more(separator)
pattern_2_nf1 <- zero_or_more(separator) %R% "atggctagag" %R%zero_or_more(separator)
pattern_2_nf1 <- zero_or_more(separator) %R% "atggctagag" %R%zero_or_more(separator)
separator <- char_class(" ")
pattern_2_nf1 <- zero_or_more(separator) %R% "atggctagag" %R%zero_or_more(separator)
nf1_p2 <- str_extract(nf1, pattern=pattern_2_nf1)
nf1 <- read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/NF1.txt")
pattern_2_nf1 <- zero_or_more(separator) %R% "atggctagag" %R%zero_or_more(separator)
nf1_p2 <- str_extract(nf1, pattern=pattern_2_nf1)
table(nf1_p2)
library(MSMB)
library(EBImage)
library(tiff)
library("EBImage")
img = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y1.jpg")
img1 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y2.jpg")
img2 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y3.jpg")
img4 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y4.jpg")
img11 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y11.jpg")
img6 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y6.jpg")
img7 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y7.jpg")
img8 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y8.jpg")
img9 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y9.jpg")
display(img)
display(img1)
display(img2)
display(img4)
display(img11)
yasli_olum <-df1$demographic%>%
filter(hastalikyas=="Yasli") %>%
filter(vital_status=="Dead") %>%
select(days_to_death,race,gender,age_at_index)
library(stringi)
library(rebus)
library(stringr)
library(readr)
library(jsonlite)
library(MSMB)
library(tiff)
library(tiff)
library(basetheme)
library(ggCyberPunk)
library(tidyverse)
library(utf8)
library(lubridate)
library(dplyr)
library(cyberpunk)
library(ggbernie)
library(ggplot2)
library(gghighcontrast)
df1<-fromJSON("son_medical.json")
df2<-fromJSON("son_bio.json")
df3 <- fromJSON("son_gene.json")
df1<- as.data.frame(df1)
df2 <- as.data.frame(df2)
data1<- data.frame(df1,df2)
genc_olum <-df1$demographic%>%
filter(hastalikyas=="Genc yas araligi") %>%
filter(vital_status=="Dead") %>%
select(age_at_index,days_to_death,race,gender)
genc_olum <-df1$demographic%>%
filter(hastalikyas=="Genc yas araligi") %>%
filter(vital_status=="Dead") %>%
select(age_at_index,days_to_death,race,gender)
# remotes::install_github("R-CoderDotCom/ggcats@main")
df1$demographic = mutate(df1$demographic,hastalikyas = case_when(df1$demographic$age_at_index<=17~"Ergen yas araligi",
df1$demographic$age_at_index>18 & df1$demographic$age_at_index<=45~"Genc yas araligi",
df1$demographic$age_at_index>46 & df1$demographic$age_at_index<=65~"Orta yas araligi",
df1$demographic$age_at_index>65 & df1$demographic$age_at_index<=100~"Yasli",
is.na(df1$demographic$age_at_index==TRUE)~NA_character_))
table(df1$demographic$hastalikyas)
yasli_olum <-df1$demographic%>%
filter(hastalikyas=="Yasli") %>%
filter(vital_status=="Dead") %>%
select(days_to_death,race,gender,age_at_index)
ggplot(yasli_olum) +
geom_bernie(aes(age_at_index,days_to_death), bernie = "head")
devtools::install_github("dill/emoGG")
library(emoGG)
library(emoGG)
devtools::install_github("dill/emoGG")
library(emoGG)
library(ggplot2)
library(emoGG)
("dill/emoGG")
library(emoGG)
("dill/emoGG")
devtools::install_github("dill/emoGG")
library(emoGG)
devtools::install_github("dill/emoGG")
devtools::install_github("dill/emoGG")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(stringi)
library(rebus)
library(stringr)
library(readr)
library(stringi)
library(rebus)
library(stringr)
library(readr)
library(jsonlite)
library(MSMB)
library(tiff)
library(basetheme)
library(ggCyberPunk)
library(tidyverse)
library(utf8)
library(lubridate)
library(dplyr)
library(cyberpunk)
library(ggbernie)
library(ggplot2)
library(gghighcontrast)
library(ggridges)
library(EBImage)
library(emoGG)
tp53 <- read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/tp53.txt")
tp53 <- read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/tp53.txt")
tp53 <- read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/tp53.txt")
# tp53 genindeki t varyasyonlari
pattern_t_tp53 <- one_or_more("T")
tp53_pt <- str_extract(tp53, pattern=pattern_t_tp53)
table(tp53_pt)
# tp53 genindeki t sayisi
tp53_pt_count <- str_count(tp53, pattern=pattern_t_tp53)
tp53_pt_count <-sum(tp53_pt_count )
# tp53 genindeki a varyasyonlari
pattern_aa_tp53 <- one_or_more("A")
tp53_paa <- str_extract(tp53, pattern=pattern_aa_tp53)
table(tp53_paa)
# tp53 genindeki t sayisi
tp53_paa_count <- str_count(tp53, pattern=pattern_aa_tp53)
tp53_paa_count <-sum(tp53_paa_count)
# tp53 genindeki g varyasyonlari
pattern_g_tp53<-  one_or_more("G")
tp53_pg <- str_count(tp53, pattern=pattern_g_tp53)
table(tp53_pg)
# tp53 genindeki g sayisi
tp53_pg_count <- str_count(tp53, pattern=pattern_g_tp53)
tp53_pg_count <- sum(tp53_pg_count)
# tp53 genindeki c varyasyonlari
pattern_c_tp53<- one_or_more("C")
tp53_pc <- str_extract(tp53, pattern=pattern_c_tp53 )
table(tp53_pc )
# tp53 genindeki c sayisi
tp53_pc_count <- str_count(tp53, pattern=pattern_c_tp53)
tp53_pc_count <- sum(tp53_pc_count)
table(tp53_paa_count,tp53_pg_count ,tp53_pc_count ,tp53_pt_count )
# A T G C nin sayilarinin gorselle?tirilmesi :
tp53_nuk_dizilim  <- data.frame(tp53_nuk_sayi =c(tp53_paa_count,tp53_pg_count ,tp53_pc_count,tp53_pt_count) , tp53_nuk_adi = c("A", "G","C","T"))
ggplot(tp53_nuk_dizilim,aes(x=tp53_nuk_adi,y =tp53_nuk_sayi) ) +  geom_point(shape = 21, colour = "black", fill = "white", size = 5, stroke = 5)
library(stringi)
library(rebus)
library(stringr)
library(readr)
library(jsonlite)
library(MSMB)
library(tiff)
library(basetheme)
library(ggCyberPunk)
library(tidyverse)
library(utf8)
library(lubridate)
library(dplyr)
library(cyberpunk)
library(ggbernie)
library(ggplot2)
library(gghighcontrast)
library(ggridges)
library(EBImage)
library(emoGG)
ap0b<-read.csv("C:\Users\Dell\Dropbox\My PC (DESKTOP-EB8G4PC)\Desktop\gen_data\ap0b.txt")
ap0b<-read.csv("C:\Users\Dell\Dropbox\My PC (DESKTOP-EB8G4PC)\Desktop\gen_data\ap0b.txt")
guld<-read.csv("guld.txt")
guld<-read.csv("C:\Users\Dell\Dropbox\My PC (DESKTOP-EB8G4PC)\Desktopguld\ guld.txt")
guld<-read.csv("C:\Users\Dell\Dropbox\My PC (DESKTOP-EB8G4PC)\Desktopguld\ guld.txt")
guld<-read.csv("C:\Users\Dell\Dropbox\My PC (DESKTOP-EB8G4PC)\Desktopguld\ guld.txt")
guld<-read.csv("C:\Users\Dell\Dropbox\My PC (DESKTOP-EB8G4PC)\Desktopguld\ guld.txt")
guld<-read.csv("C:\Users\Dell\Dropbox\My PC (DESKTOP-EB8G4PC)\Desktopguld\guld.txt")
guld<-read.csv("guld.txt")
guld<-read_csv("guld.txt")
library(stringi)
library(rebus)
library(stringr)
library(readr)
library(jsonlite)
library(MSMB)
library(tiff)
library(basetheme)
library(ggCyberPunk)
library(tidyverse)
library(utf8)
library(lubridate)
library(dplyr)
library(cyberpunk)
library(ggbernie)
library(ggplot2)
library(gghighcontrast)
library(ggridges)
library(EBImage)
guld<-read_csv("guld.txt")
guld<-read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/guld.txt")
nchar(guld)
head(guld)
head(guld)
# guld genindeki t varyasyonlari
separator <- char_class(" ")
pattern_t_guld <- zero_or_more(separator) %R% one_or_more("t") %R%zero_or_more(separator)
guld_pt <- str_extract(guld, pattern=pattern_t_guld)
table(guld_pt)
# guld genindeki t sayisi
guld_pt_count <- str_count(guld, pattern=pattern_t_guld)
guld_pt_count <-sum(guld_pt_count)
table(guld_pt_count)
# guld genindeki a varyasyonlari
pattern_aa_guld <- zero_or_more(separator) %R% one_or_more("a") %R%zero_or_more(separator)
guld_paa <- str_extract(guld, pattern=pattern_aa_guld)
table(guld_paa)
# guld genindeki t sayisi
guld_paa_count <- str_count(guld, pattern=pattern_aa_guld)
guld_paa_count <-sum(guld_paa_count)
# guld genindeki g varyasyonlari
pattern_g_guld <- zero_or_more(separator) %R% one_or_more("g") %R%zero_or_more(separator)
guld_pg <- str_extract(guld, pattern=pattern_g_guld)
table(guld_pg)
# guld genindeki g sayisi
guld_pg_count <- str_count(guld, pattern=pattern_g_guld)
guld_pg_count <- sum(guld_pg_count)
# guld genindeki c varyasyonlari
pattern_c_guld <- zero_or_more(separator) %R% one_or_more("c") %R%zero_or_more(separator)
guld_pc <- str_extract(guld, pattern=pattern_c_guld)
table(guld_pc)
# guld genindeki c sayisi
guld_pc_count <- str_count(guld, pattern=pattern_c_guld)
guld_pc_count <- sum(guld_pc_count)
table(guld_paa_count,guld_pg_count ,guld_pc_count ,guld_pt_count )
# A T G C nin sayilarinin gorselle?tirilmesi :
guld_nuk_dizilim <- data.frame(nuk_sayi =c(guld_paa_count,guld_pg_count ,guld_pc_count,guld_pt_count) , nuk_adi = c("A", "G","C","T"))
ap0b<-read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/ap0b.txt")
nchar(ap0b)""
guld<-read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/guld.txt")
nchar(guld)
head(guld)
head(guld)
# guld genindeki t varyasyonlari
separator <- char_class(" ")
pattern_t_guld <- zero_or_more(separator) %R% one_or_more("t") %R%zero_or_more(separator)
guld_pt <- str_extract(guld, pattern=pattern_t_guld)
table(guld_pt)
# guld genindeki t sayisi
guld_pt_count <- str_count(guld, pattern=pattern_t_guld)
guld_pt_count <-sum(guld_pt_count)
table(guld_pt_count)
# guld genindeki a varyasyonlari
pattern_aa_guld <- zero_or_more(separator) %R% one_or_more("a") %R%zero_or_more(separator)
guld_paa <- str_extract(guld, pattern=pattern_aa_guld)
table(guld_paa)
# guld genindeki t sayisi
guld_paa_count <- str_count(guld, pattern=pattern_aa_guld)
guld_paa_count <-sum(guld_paa_count)
# guld genindeki g varyasyonlari
pattern_g_guld <- zero_or_more(separator) %R% one_or_more("g") %R%zero_or_more(separator)
guld_pg <- str_extract(guld, pattern=pattern_g_guld)
table(guld_pg)
# guld genindeki g sayisi
guld_pg_count <- str_count(guld, pattern=pattern_g_guld)
guld_pg_count <- sum(guld_pg_count)
# guld genindeki c varyasyonlari
pattern_c_guld <- zero_or_more(separator) %R% one_or_more("c") %R%zero_or_more(separator)
guld_pc <- str_extract(guld, pattern=pattern_c_guld)
table(guld_pc)
# guld genindeki c sayisi
guld_pc_count <- str_count(guld, pattern=pattern_c_guld)
guld_pc_count <- sum(guld_pc_count)
table(guld_paa_count,guld_pg_count ,guld_pc_count ,guld_pt_count )
# A T G C nin sayilarinin gorselle?tirilmesi :
guld_nuk_dizilim <- data.frame(nuk_sayi =c(guld_paa_count,guld_pg_count ,guld_pc_count,guld_pt_count) , nuk_adi = c("A", "G","C","T"))
# PTEN geni kombinasyonlarina bakma :
head(pten1,30)
nchar(best)
best<-read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/best.txt")
nchar(best)
head(best)
head(best)
# best genindeki t varyasyonlari
separator <- char_class(" ")
pattern_t_best <- zero_or_more(separator) %R% one_or_more("t") %R%zero_or_more(separator)
best_pt <- str_extract(best, pattern=pattern_t_best)
table(best_pt)
# best genindeki t sayisi
best_pt_count <- str_count(best, pattern=pattern_t_best)
best_pt_count <-sum(best_pt_count)
table(best_pt_count)
# best genindeki a varyasyonlari
pattern_aa_best <- zero_or_more(separator) %R% one_or_more("a") %R%zero_or_more(separator)
best_paa <- str_extract(best, pattern=pattern_aa_best)
table(best_paa)
# best genindeki t sayisi
best_paa_count <- str_count(best, pattern=pattern_aa_best)
best_paa_count <-sum(best_paa_count)
# best genindeki g sayisi
best_pg_count <- str_count(best, pattern=pattern_g_best)
best<-read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/best.txt")
nchar(best)
head(best)
head(best)
# best genindeki t varyasyonlari
separator <- char_class(" ")
pattern_t_best <- zero_or_more(separator) %R% one_or_more("t") %R%zero_or_more(separator)
best_pt <- str_extract(best, pattern=pattern_t_best)
table(best_pt)
# best genindeki t sayisi
best_pt_count <- str_count(best, pattern=pattern_t_best)
best_pt_count <-sum(best_pt_count)
table(best_pt_count)
# best genindeki a varyasyonlari
pattern_aa_best <- zero_or_more(separator) %R% one_or_more("a") %R%zero_or_more(separator)
best_paa <- str_extract(best, pattern=pattern_aa_best)
table(best_paa)
# best genindeki t sayisi
best_paa_count <- str_count(best, pattern=pattern_aa_best)
best_paa_count <-sum(best_paa_count)
# best genindeki g sayisi
best_pg_count <- str_count(best, pattern=pattern_g_best)
best<-read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/best.txt")
nchar(best)
head(best)
head(best)
# best genindeki t varyasyonlari
separator <- char_class(" ")
pattern_t_best <- zero_or_more(separator) %R% one_or_more("t") %R%zero_or_more(separator)
best_pt <- str_extract(best, pattern=pattern_t_best)
table(best_pt)
# best genindeki t sayisi
best_pt_count <- str_count(best, pattern=pattern_t_best)
best_pt_count <-sum(best_pt_count)
table(best_pt_count)
# best genindeki a varyasyonlari
pattern_aa_best <- zero_or_more(separator) %R% one_or_more("a") %R%zero_or_more(separator)
best_paa <- str_extract(best, pattern=pattern_aa_best)
table(best_paa)
# best genindeki t sayisi
best_paa_count <- str_count(best, pattern=pattern_aa_best)
best_paa_count <-sum(best_paa_count)
# best genindeki g sayisi
best_pg_count <- str_count(best, pattern=pattern_g_best)
best<-read_csv("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/best.txt")
nchar(best)
head(best)
head(best)
# best genindeki t varyasyonlari
separator <- char_class(" ")
pattern_t_best <- zero_or_more(separator) %R% one_or_more("t") %R%zero_or_more(separator)
best_pt <- str_extract(best, pattern=pattern_t_best)
table(best_pt)
# best genindeki t sayisi
best_pt_count <- str_count(best, pattern=pattern_t_best)
best_pt_count <-sum(best_pt_count)
table(best_pt_count)
# best genindeki a varyasyonlari
pattern_aa_best <- zero_or_more(separator) %R% one_or_more("a") %R%zero_or_more(separator)
best_paa <- str_extract(best, pattern=pattern_aa_best)
table(best_paa)
# best genindeki t sayisi
best_paa_count <- str_count(best, pattern=pattern_aa_best)
best_paa_count <-sum(best_paa_count)
# best genindeki g sayisi
pattern_g_best <- zero_or_more(separator) %R% one_or_more("g") %R%zero_or_more(separator)
best_pg_count <- str_count(best, pattern=pattern_g_best)
best_pg_count <- sum(best_pg_count)
# best genindeki g varyasyonlari
pattern_g_best <- zero_or_more(separator) %R% one_or_more("g") %R%zero_or_more(separator)
best_pg <- str_extract(best, pattern=pattern_g_best)
table(best_pg)
# best genindeki c varyasyonlari
pattern_c_best <- zero_or_more(separator) %R% one_or_more("c") %R%zero_or_more(separator)
best_pc <- str_extract(best, pattern=pattern_c_best)
table(best_pc)
# best genindeki c sayisi
best_pc_count <- str_count(best, pattern=pattern_c_best)
best_pc_count <- sum(best_pc_count)
table(best_paa_count,best_pg_count ,best_pc_count ,best_pt_count )
# A T G C nin sayilarinin gorselle?tirilmesi :
best_nuk_dizilim <- data.frame(nuk_sayi =c(best_paa_count,best_pg_count ,best_pc_count,best_pt_count) , nuk_adi = c("A", "G","C","T"))
df1<-fromJSON("son_medical.json")
df2<-fromJSON("son_bio.json")
df3 <- fromJSON("son_gene.json")
df1<- as.data.frame(df1)
df2 <- as.data.frame(df2)
data1<- data.frame(df1,df2)
img = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y1.jpg")
img1 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y2.jpg")
img2 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y3.jpg")
img4 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y4.jpg")
img11 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y11.jpg")
img6 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y6.jpg")
img7 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y7.jpg")
img8 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y8.jpg")
img9 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y9.jpg")
display(img)
display(img1)
display(img2)
display(img4)
display(img11)
display(img6)
display(img7)
display(img8)
display(img9)
data<-df1$demographic %>%
select(gender,race,age_at_index ,vital_status , ethnicity)
plot_bar_high_contrast <-
function(x,
foreground_color = "#ff6700",
background_color = "white") {
plot <- ggplot(data, aes(x = x, y= age_at_index,fill=gender)) +
geom_bar(stat = "identity",
position = position_dodge()) +
geom_hline(yintercept = 0,
color = foreground_color,
size = 1) +
theme_high_contrast(
base_family = "InputMono",
foreground_color = foreground_color,
background_color = background_color
) +
scale_fill_high_contrast(foreground_color = foreground_color) +
labs(title = paste0("Demografik degiskenlerin"),
subtitle =paste0("yaslara gore dagilimi"),
caption = "Gliomas Data")
return(plot)
}
p <- plot_bar_high_contrast(data$vital_status)
p
data<-df1$demographic %>%
select(gender,race,age_at_index ,vital_status , ethnicity)
plot_bar_high_contrast <-
function(x,
foreground_color = "#ff6700",
background_color = "white") {
plot <- ggplot(data, aes(x = x, y= age_at_index,fill=gender)) +
geom_bar(stat = "identity",
position = position_dodge()) +
geom_hline(yintercept = 0,
color = foreground_color,
size = 1) +
theme_high_contrast(
base_family = "InputMono",
foreground_color = foreground_color,
background_color = background_color
) +
scale_fill_high_contrast(foreground_color = foreground_color) +
labs(title = paste0("Demografik degiskenlerin"),
subtitle =paste0("yaslara gore dagilimi"),
caption = "Gliomas Data")
return(plot)
}
p <- plot_bar_high_contrast(data$vital_status )
p
data<-df1$demographic %>%
select(gender,race,age_at_index ,vital_status , ethnicity)
plot_bar_high_contrast <-
function(x,
foreground_color = "#ff6700",
background_color = "white") {
plot <- ggplot(data, aes(x = x, y= age_at_index,fill=gender)) +
geom_bar(stat = "identity",
position = position_dodge()) +
geom_hline(yintercept = 0,
color = foreground_color,
size = 1) +
theme_high_contrast(
base_family = "InputMono",
foreground_color = foreground_color,
background_color = background_color
) +
scale_fill_high_contrast(foreground_color = foreground_color) +
labs(title = paste0("Demografik degiskenlerin"),
subtitle =paste0("yaslara gore dagilimi"),
caption = "Gliomas Data")
return(plot)
}
p <- plot_bar_high_contrast(data$race )
p
img = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y1.jpg")
img1 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y2.jpg")
img2 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y3.jpg")
img4 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y4.jpg")
img11 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y11.jpg")
img6 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y6.jpg")
img7 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y7.jpg")
img8 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y8.jpg")
img9 = readImage("C:/Users/Dell/Dropbox/My PC (DESKTOP-EB8G4PC)/Desktop/yes/Y9.jpg")
display(img)
display(img1)
display(img2)
display(img4)
display(img11)
display(img6)
display(img7)
display(img8)
display(img9)
library(emoGG)
